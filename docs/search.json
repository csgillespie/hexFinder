[{"path":"/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Pedro Silva. Author, maintainer.","code":""},{"path":"/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Silva P (2023). hexFinder: Find Hex Logos CRAN Packages. R package version 0.8.0, https://pedrocsilva.com.","code":"@Manual{,   title = {hexFinder: Find Hex Logos for CRAN Packages},   author = {Pedro Silva},   year = {2023},   note = {R package version 0.8.0},   url = {https://pedrocsilva.com}, }"},{"path":"/index.html","id":"hexfinder-","dir":"","previous_headings":"","what":"hexFinder - Find hex logos for CRAN packages","title":"hexFinder - Find hex logos for CRAN packages","text":"Scavenge web possible hex logos CRAN packages.","code":""},{"path":[]},{"path":"/index.html","id":"id_1---install-the-package","dir":"","previous_headings":"","what":"hexFinder - Find hex logos for CRAN packages","title":"hexFinder - Find hex logos for CRAN packages","text":"","code":"# Most recent development version from github: devtools::install_github('pedrocoutinhosilva/hexFinder')"},{"path":"/index.html","id":"id_2---include-it-in-your-project","dir":"","previous_headings":"","what":"hexFinder - Find hex logos for CRAN packages","title":"hexFinder - Find hex logos for CRAN packages","text":"","code":"library(hexFinder)"},{"path":"/index.html","id":"usage","dir":"","previous_headings":"","what":"Usage","title":"hexFinder - Find hex logos for CRAN packages","text":"Call find_hex() function name package like find hex logo , optionally, place logo stored: package CRAN, logo package found, simple logo generated: alternative, can also use scavenge() function. functionality find_hex(), extra raccoons:","code":"> find_hex(\"ggplot2\", \"output\") Downloaded from GitHub repo hex for ggplot2 [1] \"output/ggplot2.png\" > find_hex(\"notapackage\", \"output\") Not a cran package No logo found, generated hex for notapackage [1] \"output/notapackage.svg\" > scavenge(\"rlang\", \"output\") Summoning racoons to help with the search...          /\\ /\\        -'<o_o>'-   _          () ()\\  ,'_\\          ( . ) )/._./          (_)-(_).--' Downloaded from GitHub repo hex for rlang [1] \"output/rlang.png\""},{"path":"/index.html","id":"dealing-with-github-api-limits","dir":"","previous_headings":"","what":"Dealing with github API limits","title":"hexFinder - Find hex logos for CRAN packages","text":"Github API used package limits. first time session make search might see following message: limit normally problem (around 50 requests per hour), planning large amount searches, can set github_pat global variable using .Renviron file calling Sys.setenv(): information get github personal access token, https://docs.github.com/en/authentication/keeping--account--data-secure/creating--personal-access-token.","code":"> find_hex(\"devtools\", \"output\") No github personal access token provided. Limited search rates for github will apply. Set up github_pat global variable if you plan to query multiple repos in a short time Downloaded from GitHub repo hex for devtools [1] \"output/devtools.svg\" Sys.setenv(github_pat = \"your_personal_access_token\")"},{"path":"/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"hexFinder - Find hex logos for CRAN packages","text":"Online documentation available : https://www.anatomyofcode.com/hexFinder","code":""},{"path":"/reference/catch.html","id":null,"dir":"Reference","previous_headings":"","what":"Catches errors from a given expression. Can be used in a pipe. — catch","title":"Catches errors from a given expression. Can be used in a pipe. — catch","text":"Catches errors given expression. Can used pipe.","code":""},{"path":"/reference/catch.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Catches errors from a given expression. Can be used in a pipe. — catch","text":"","code":"catch(...)"},{"path":"/reference/catch.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Catches errors from a given expression. Can be used in a pipe. — catch","text":"... expression safely evaluate.","code":""},{"path":"/reference/catch.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Catches errors from a given expression. Can be used in a pipe. — catch","text":"result evaluating expression NULL case error.","code":""},{"path":"/reference/check_known_packages.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches a list of known package hex links for a given package name — check_known_packages","title":"Searches a list of known package hex links for a given package name — check_known_packages","text":"packages logos tied CRAN way.   stored special cases.","code":""},{"path":"/reference/check_known_packages.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches a list of known package hex links for a given package name — check_known_packages","text":"","code":"check_known_packages(   pkg_name,   known_packages = getOption(\"hexFinder.known_packages\") )"},{"path":"/reference/check_known_packages.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches a list of known package hex links for a given package name — check_known_packages","text":"pkg_name single string name package find hex . known_packages Named list known hex locations packages.","code":""},{"path":"/reference/check_known_packages.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches a list of known package hex links for a given package name — check_known_packages","text":"URL points image NULL result found.","code":""},{"path":"/reference/check_known_repos.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches a list of known package hex curated lists for a given package name — check_known_repos","title":"Searches a list of known package hex curated lists for a given package name — check_known_repos","text":"packages logos already curated repositories. avoids   additional CRAN calls returns high definition versions logos.","code":""},{"path":"/reference/check_known_repos.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches a list of known package hex curated lists for a given package name — check_known_repos","text":"","code":"check_known_repos(pkg_name, known_repos = getOption(\"hexFinder.known_repos\"))"},{"path":"/reference/check_known_repos.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches a list of known package hex curated lists for a given package name — check_known_repos","text":"pkg_name single string name package find hex . known_packages Named list known curated repos store logos packages. quality usually higher normal.","code":""},{"path":"/reference/check_known_repos.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches a list of known package hex curated lists for a given package name — check_known_repos","text":"URL points image NULL result found.","code":""},{"path":"/reference/clean_repo_links.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns gitub repo links based on given URLs — clean_repo_links","title":"Returns gitub repo links based on given URLs — clean_repo_links","text":"Returns gitub repo links based given URLs","code":""},{"path":"/reference/clean_repo_links.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns gitub repo links based on given URLs — clean_repo_links","text":"","code":"clean_repo_links(...)"},{"path":"/reference/clean_repo_links.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns gitub repo links based on given URLs — clean_repo_links","text":"... links like parse find github URL .","code":""},{"path":"/reference/clean_repo_links.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns gitub repo links based on given URLs — clean_repo_links","text":"list possible github repos","code":""},{"path":"/reference/crop_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Crops the empty space from a image — crop_image","title":"Crops the empty space from a image — crop_image","text":"Crops empty space image","code":""},{"path":"/reference/crop_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Crops the empty space from a image — crop_image","text":"","code":"crop_image(path)"},{"path":"/reference/crop_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Crops the empty space from a image — crop_image","text":"path path image crop.","code":""},{"path":"/reference/crop_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Crops the empty space from a image — crop_image","text":"return, called side effects.","code":""},{"path":"/reference/download_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Download a logo image — download_logo","title":"Download a logo image — download_logo","text":"Downloads given URL stores using package name specified output folder","code":""},{"path":"/reference/download_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download a logo image — download_logo","text":"","code":"download_logo(pkg_name, raw_url, output, crop = TRUE)"},{"path":"/reference/download_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download a logo image — download_logo","text":"pkg_name name file save. raw_url image URL. output Folder path store download file. crop empty space removed final image file.","code":""},{"path":"/reference/download_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download a logo image — download_logo","text":"path downloaded image stored.","code":""},{"path":"/reference/find_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds hex logos for given packages — find_hex","title":"Finds hex logos for given packages — find_hex","text":"Finds downloads best possible image represents hex logo given list package names.","code":""},{"path":"/reference/find_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds hex logos for given packages — find_hex","text":"","code":"find_hex(   pkg_names,   output = NULL,   repo = NULL,   skip_known_logos = FALSE,   overwrite = FALSE )"},{"path":"/reference/find_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds hex logos for given packages — find_hex","text":"pkg_names single string vector strings names packages find hexes . output output path store found logos repo repo use find package logo. none provided, try find one based CRAN meta information. Useful want minimize API calls CRAN. skip_known_logos logos sourced known repos urls. set TRUE, locations skipped. Useful getting outdated versions logos, slower. Defaults FALSE. overwrite logo package name already exists output folder, overwritten. Defaults FALSE.","code":""},{"path":"/reference/find_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds hex logos for given packages — find_hex","text":"return, called side effects.","code":""},{"path":"/reference/generate_hex.html","id":null,"dir":"Reference","previous_headings":"","what":"Generates a default logo for a package. — generate_hex","title":"Generates a default logo for a package. — generate_hex","text":"Generates generic logo package. package CRAN,   different set colors used.","code":""},{"path":"/reference/generate_hex.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generates a default logo for a package. — generate_hex","text":"","code":"generate_hex(   name,   output,   colors = c(\"#1881C2\", \"#87B13F\"),   fallback_colors = c(\"#a60000\", \"#360000\") )"},{"path":"/reference/generate_hex.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generates a default logo for a package. — generate_hex","text":"name package generate logo . output path store generated logo . colors vector two valid colors. [1] fill [2] outline generated logo. Used package exists CRAN. fallback_colors vector two valid colors. [1] fill [2] outline generated logo. Used package exist CRAN.","code":""},{"path":"/reference/generate_hex.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generates a default logo for a package. — generate_hex","text":"path generated logo image.","code":""},{"path":"/reference/get_best_image.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns the best image path from a list of image paths — get_best_image","title":"Returns the best image path from a list of image paths — get_best_image","text":"Returns best image path list image paths","code":""},{"path":"/reference/get_best_image.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns the best image path from a list of image paths — get_best_image","text":"","code":"get_best_image(paths, download_endpoint, branch)"},{"path":"/reference/get_best_image.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns the best image path from a list of image paths — get_best_image","text":"paths list path information. download_endpoint download endpoint repo. branch repo active branch.","code":""},{"path":"/reference/get_best_image.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns the best image path from a list of image paths — get_best_image","text":"single url path","code":""},{"path":"/reference/get_cran_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns CRAN information about a given package — get_cran_info","title":"Returns CRAN information about a given package — get_cran_info","text":"Returns CRAN information given package","code":""},{"path":"/reference/get_cran_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns CRAN information about a given package — get_cran_info","text":"","code":"get_cran_info(pkg_name)"},{"path":"/reference/get_cran_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns CRAN information about a given package — get_cran_info","text":"pkg_name single string name package find meta information .","code":""},{"path":"/reference/get_cran_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns CRAN information about a given package — get_cran_info","text":"named list CRAN metadata package","code":""},{"path":"/reference/get_endpoint_content.html","id":null,"dir":"Reference","previous_headings":"","what":"Fetch the content of a endpoint. Multiple branches can be given, the content\r\nreturned will also include which was the valid branch. — get_endpoint_content","title":"Fetch the content of a endpoint. Multiple branches can be given, the content\r\nreturned will also include which was the valid branch. — get_endpoint_content","text":"Fetch content endpoint. Multiple branches can given, content returned also include valid branch.","code":""},{"path":"/reference/get_endpoint_content.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fetch the content of a endpoint. Multiple branches can be given, the content\r\nreturned will also include which was the valid branch. — get_endpoint_content","text":"","code":"get_endpoint_content(endpoint, branchs = c(\"master\", \"main\"), token = \"\")"},{"path":"/reference/get_endpoint_content.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fetch the content of a endpoint. Multiple branches can be given, the content\r\nreturned will also include which was the valid branch. — get_endpoint_content","text":"endpoint github endpoint search. branchs branches search. Defaults main master. token github personal access token. Defaults none.","code":""},{"path":"/reference/get_endpoint_content.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fetch the content of a endpoint. Multiple branches can be given, the content\r\nreturned will also include which was the valid branch. — get_endpoint_content","text":"named list branch name repo content","code":""},{"path":"/reference/get_metacran_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Returns metacran information about a given package — get_metacran_info","title":"Returns metacran information about a given package — get_metacran_info","text":"Returns metacran information given package","code":""},{"path":"/reference/get_metacran_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Returns metacran information about a given package — get_metacran_info","text":"","code":"get_metacran_info(pkg_name)"},{"path":"/reference/get_metacran_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Returns metacran information about a given package — get_metacran_info","text":"pkg_name single string name package find meta information .","code":""},{"path":"/reference/get_metacran_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Returns metacran information about a given package — get_metacran_info","text":"named list metadata information package","code":""},{"path":"/reference/get_possible_paths.html","id":null,"dir":"Reference","previous_headings":"","what":"Search the given content for paths that match the constrains from\r\n  ignore_patterns and logo_patterns. — get_possible_paths","title":"Search the given content for paths that match the constrains from\r\n  ignore_patterns and logo_patterns. — get_possible_paths","text":"Search given content paths match constrains   ignore_patterns logo_patterns.","code":""},{"path":"/reference/get_possible_paths.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search the given content for paths that match the constrains from\r\n  ignore_patterns and logo_patterns. — get_possible_paths","text":"","code":"get_possible_paths(content, logo_patterns, ignore_patterns, pkg_name = \"\")"},{"path":"/reference/get_possible_paths.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search the given content for paths that match the constrains from\r\n  ignore_patterns and logo_patterns. — get_possible_paths","text":"content result calling get_endpoint_content() github repo. logo_patterns regex string patterns accept. ignore_patterns regex string patterns ignore. pkg_name Name package find logos .","code":""},{"path":"/reference/get_possible_paths.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search the given content for paths that match the constrains from\r\n  ignore_patterns and logo_patterns. — get_possible_paths","text":"list paths match given patterns","code":""},{"path":"/reference/keep_good_ratio_images.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters a list of image entries keeping images that might be a logo — keep_good_ratio_images","title":"Filters a list of image entries keeping images that might be a logo — keep_good_ratio_images","text":"Filters list image entries keeping images might logo","code":""},{"path":"/reference/keep_good_ratio_images.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters a list of image entries keeping images that might be a logo — keep_good_ratio_images","text":"","code":"keep_good_ratio_images(paths, download_endpoint, branch)"},{"path":"/reference/keep_good_ratio_images.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters a list of image entries keeping images that might be a logo — keep_good_ratio_images","text":"paths list path information download_endpoint download endpoint repo branch repo active branch","code":""},{"path":"/reference/keep_good_ratio_images.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters a list of image entries keeping images that might be a logo — keep_good_ratio_images","text":"list path information","code":""},{"path":"/reference/locate_repo.html","id":null,"dir":"Reference","previous_headings":"","what":"Finds the best repo for a given package — locate_repo","title":"Finds the best repo for a given package — locate_repo","text":"CRAN packages cloned github repo can query logos,   CRAN stores actual content package file. looking   meta CRAN links can try find original repo use one   instead.","code":""},{"path":"/reference/locate_repo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Finds the best repo for a given package — locate_repo","text":"","code":"locate_repo(pkg_name)"},{"path":"/reference/locate_repo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Finds the best repo for a given package — locate_repo","text":"pkg_name single string name package find repo .","code":""},{"path":"/reference/locate_repo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Finds the best repo for a given package — locate_repo","text":"URL points github repository.","code":""},{"path":"/reference/log.html","id":null,"dir":"Reference","previous_headings":"","what":"Logs a given message. — log","title":"Logs a given message. — log","text":"Logs given message.","code":""},{"path":"/reference/log.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Logs a given message. — log","text":"","code":"log(...)"},{"path":"/reference/log.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Logs a given message. — log","text":"... message log.","code":""},{"path":"/reference/log.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Logs a given message. — log","text":"return, called side effects.","code":""},{"path":"/reference/scavenge.html","id":null,"dir":"Reference","previous_headings":"","what":"Same as [find_hex], but with extra raccoons — scavenge","title":"Same as [find_hex], but with extra raccoons — scavenge","text":"[find_hex], extra raccoons","code":""},{"path":"/reference/scavenge.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Same as [find_hex], but with extra raccoons — scavenge","text":"","code":"scavenge(...)"},{"path":"/reference/scavenge.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Same as [find_hex], but with extra raccoons — scavenge","text":"... arguments can passed [find_hex].","code":""},{"path":"/reference/scavenge.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Same as [find_hex], but with extra raccoons — scavenge","text":"return, called side effects.","code":""},{"path":"/reference/search_repo_logo.html","id":null,"dir":"Reference","previous_headings":"","what":"Searches a given github repo URL for the best hex logo image. — search_repo_logo","title":"Searches a given github repo URL for the best hex logo image. — search_repo_logo","text":"Searches given github repo URL best hex logo image.","code":""},{"path":"/reference/search_repo_logo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Searches a given github repo URL for the best hex logo image. — search_repo_logo","text":"","code":"search_repo_logo(   pkg_name,   repository,   token = Sys.getenv(\"github_pat\"),   logo_patterns = getOption(\"hexFinder.logo_patterns\"),   ignore_patterns = getOption(\"hexFinder.ignore_patterns\") )"},{"path":"/reference/search_repo_logo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Searches a given github repo URL for the best hex logo image. — search_repo_logo","text":"pkg_name mane package want logo . repository github repository search . token github personal access token. variable github_pat. variable set, might run API limits running many queries. logo_patterns String valid name.extension file names files look , separated |. pkg_name Can used placeholder package name. ignore_patterns String patterns ignore looking valid logo. Can part filename part file path.","code":""},{"path":"/reference/search_repo_logo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Searches a given github repo URL for the best hex logo image. — search_repo_logo","text":"URL image NULL image found","code":""},{"path":"/reference/url_file_exists.html","id":null,"dir":"Reference","previous_headings":"","what":"Checks if a given url is valid and available. — url_file_exists","title":"Checks if a given url is valid and available. — url_file_exists","text":"Checks given url valid available.","code":""},{"path":"/reference/url_file_exists.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Checks if a given url is valid and available. — url_file_exists","text":"","code":"url_file_exists(url, status_ok = 200)"},{"path":"/reference/url_file_exists.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Checks if a given url is valid and available. — url_file_exists","text":"url resource url check. status_ok list valid header statuses.","code":""},{"path":"/reference/url_file_exists.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Checks if a given url is valid and available. — url_file_exists","text":"result evaluating expression NULL case error.","code":""}]
